name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

name: Push - Workflow

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    paths:
      - '{{cookiecutter.project_slug}}/**'
      - 'pyproject.toml'
      - 'Makefile'
      - '.pre-commit-config.yaml'
      - '.github/workflows/push.yml'
  push:
    branches:
      - main
    paths:
      - '{{cookiecutter.project_slug}}/**'
      - 'pyproject.toml'
      - 'Makefile'
      - '.pre-commit-config.yaml'
      - '.github/workflows/push.yml'

run-name: Push on {% raw %}${{ github.ref_name }} - ${{ github.event.head_commit.message }}{% endraw %}


jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: {% raw %}pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}{% endraw %}

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Run checks
        run: make check
  
{% if cookiecutter.tox == 'y' %}
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up python & install poetry
        uses: ./.github/actions/install-poetry
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Load cached venv
        uses: actions/cache@v4
        with:
          path: .tox
          key: {% raw %}venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}{% endraw %}

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions

      - name: Test with tox
        run: tox
{% if cookiecutter.codecov == "y" %}
      - name: Upload coverage reports to Codecov with GitHub Action on Python {{cookiecutter.target_python_version}}
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
          verbose: true # optional (default = false)
        if: {% raw %}${{ matrix.python-version == {% endraw %}'{{cookiecutter.target_python_version}}' {% raw %}}}{% endraw %}
{% else %}
{% else %}
tests:
  runs-on: ubuntu-latest
  steps:
    - name: Check out
      uses: actions/checkout@v4

    - uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: {% raw %}pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}{% endraw %}

    - name: Set up the environment
      uses: ./.github/actions/setup-poetry-env

    - name: Run tests
      run: make test
{%- endif %}

{%- if cookiecutter.mkdocs == "y" %}
  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Check if documentation can be built
        run: make docs-test
{%- endif %}
