name: Push - Workflow
run-name: Push on {% raw %}${{ github.ref_name }} - ${{ github.event.head_commit.message }}{% endraw %}

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.editorconfig'
      - '.gitignore'
      - '*.md'

env:
  PYTHON_VERSION: "{{cookiecutter.target_python_version}}"
  POETRY_VERSION: "{{cookiecutter.poetry_version}}"

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        id: setup-environment
        uses: ga-data-strategy-analytics/ga-github-workflows/.github/actions/setup-poetry-env@main
        with:
          python-version: {% raw %}${{ env.PYTHON_VERSION }}{% endraw %}
          poetry-version: {% raw %}${{ env.POETRY_VERSION }}{% endraw %}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: {% raw %}pre-commit-${{ runner.os }}-${{ steps.setup-environment.outputs.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}{% endraw %}

      - name: Run quality checks
        run: make check
{% if cookiecutter.tox == 'y' %}
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up python & install poetry
        id: setup-python-poetry
        uses: ga-data-strategy-analytics/ga-github-workflows/.github/actions/install-poetry@main
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}
          poetry-version: {% raw %}${{ env.POETRY_VERSION  }}{% endraw %}

      - name: Load cached venv
        uses: actions/cache@v4
        with:
          path: .tox
          key: {% raw %}venv-${{ runner.os }}-${{ matrix.python-version }}-${{ env.POETRY_VERSION }}-${{ hashFiles('poetry.lock') }}{% endraw %}

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions

      - name: Test with tox
        run: tox
{% if cookiecutter.codecov == "y" %}
      - name: Upload coverage reports to Codecov with GitHub Action on Python {{cookiecutter.target_python_version}}
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
          verbose: true # optional (default = false)
        if: {% raw %}${{ matrix.python-version == {% endraw %}'{{cookiecutter.target_python_version}}' {% raw %}}}{% endraw %}
{%- endif %}
{% else %}
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ga-data-strategy-analytics/ga-github-workflows/.github/actions/setup-poetry-env@main
        with:
          python-version: {% raw %}${{ env.PYTHON_VERSION }}{% endraw %}
          poetry-version: {% raw %}${{ env.POETRY_VERSION }}{% endraw %}

      - name: Run tests
        run: make test
{% if cookiecutter.codecov == "y" %}
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
          verbose: true # optional (default = false)
{%- endif %}
{%- endif %}

{%- if cookiecutter.mkdocs == "y" %}
  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
      uses: ga-data-strategy-analytics/ga-github-workflows/.github/actions/setup-poetry-env@main
      with:
        python-version: {% raw %}${{ env.PYTHON_VERSION }}{% endraw %}
        poetry-version: {% raw %}${{ env.POETRY_VERSION }}{% endraw %}

      - name: Check if documentation can be built
        run: make docs-test
{%- endif %}
