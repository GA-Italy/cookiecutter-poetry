name: Deploy dev - Workflow
run-name: Deploy dev - docker image {% raw %}${{ vars.ECR_REPOSITORY_NAME }}${{ github.event.inputs.image_tag && format(':{0}', github.event.inputs.image_tag) || '' }}{% endraw %}

on:
  workflow_dispatch:
    inputs:
      platforms:
        type: choice
        required: true
        description: Build plaform
        default: '["linux/amd64", "linux/arm64"]'
        options:
        - '["linux/amd64"]'
        - '["linux/arm64"]'
        - '["linux/amd64", "linux/arm64"]'

      image_tag:
        required: false
        description: Tag name for the docker image

env:
  PYTHON_VERSION: "{{cookiecutter.target_python_version}}"
  POETRY_VERSION: "{{cookiecutter.poetry_version}}"

permissions:
  contents: read
  id-token: write

jobs:
  evaluate_image_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Evaluate Image Tag
        id: evaluate-image-tag
        run: |
          if [ -z "{% raw %}${{ github.event.inputs.image_tag }}{% endraw %}" ]; then
            git fetch --tags --force
            image_tag=$(bash .github/scripts/versioning_script.sh)
            echo "Using script to compute image_tag: '$image_tag'"
            echo "image_tag=$image_tag" >> "$GITHUB_OUTPUT"
          else
            echo "Using the provided image_tag from the input: '{% raw %}${{ github.event.inputs.image_tag }}{% endraw %}'"
            echo "image_tag={% raw %}${{ github.event.inputs.image_tag }}{% endraw %}" >> "$GITHUB_OUTPUT"
          fi
    outputs:
      image_tag: {% raw %}${{ steps.evaluate-image-tag.outputs.image_tag }}{% endraw %}

  deploy_docker_dev:
    needs: evaluate_image_tag
    uses: ga-data-strategy-analytics/ga-github-workflows/.github/workflows/deploy_docker.yml@main
    with:
      branch: {% raw %}${{ github.ref_name }}{% endraw %}
      platforms: {% raw %}${{ github.event.inputs.platforms }}{% endraw %}
      image-tag: {% raw %}${{ needs.evaluate_image_tag.outputs.image_tag }}{% endraw %}
      context: "."
      dockerfile: "./Dockerfile"
      aws-env: dev
      aws-region: {% raw %}${{ vars.AWS_REGION }}{% endraw %}
      aws-deploy-role-arn: {% raw %}${{ vars.AWS_DEPLOY_ROLE_ARN_DEV }}{% endraw %}
      ecr-repository-name: {% raw %}${{ vars.ECR_REPOSITORY_NAME }}{% endraw %}

  deploy_completed_dev:
    runs-on: ubuntu-latest
    needs: deploy_docker_dev
    environment: dev
    steps:
    - name: Deploy completed
      run: echo "Deploy dev completed!"
